version: 2.1
executors: 
  docker-publisher: 
    docker: 
      - 
        image: circleci/python3.9
    environment: 
      IMAGE_NAME: madereddy/noisy
jobs: 
  build: 
    executor: docker-publisher
    steps: 
      - checkout
      - setup_remote_docker
      - 
        run: 
          command: "docker build -t $IMAGE_NAME:latest .\n"
          name: "Build Docker image"
      - 
        run: 
          command: "docker save -o image.tar $IMAGE_NAME"
          name: "Archive Docker image"
      - 
        persist_to_workspace: 
          paths: 
            - ./image.tar
          root: "."
      - 
        restore_cache: 
          keys: 
            - "v1-dependencies-{{ checksum \"requirements.txt\" }}"
            - v1-dependencies-
      - 
        run: 
          command: |
              mkdir -p ./venv
              virtualenv ./venv
              . venv/bin/activate
              pip install -r requirements.txt
          name: "install dependencies"
      - 
        save_cache: 
          key: "v1-dependencies-{{ checksum \"requirements.txt\" }}"
          paths: 
            - ./venv
      - 
        run: 
          command: |
              . venv/bin/activate
              python --version
              pip --version
              python noisy.py --config config.json --timeout 60
          name: "run script"
      - 
        store_artifacts: 
          destination: test-reports
          path: test-reports
  publish-latest: 
    executor: docker-publisher
    steps: 
      - 
        attach_workspace: 
          at: /tmp/workspace
      - setup_remote_docker
      - 
        run: 
          command: "docker load -i /tmp/workspace/image.tar"
          name: "Load archived Docker image"
      - 
        run: 
          command: |
              echo "$AccessToken" | docker login -u "$Login " --password-stdin
              docker push $IMAGE_NAME:latest
          name: "Publish Docker Image to Docker Hub"
workflows: 
  version: 2
  build-master: 
    jobs: 
      - 
        build: 
          filters: 
            branches: 
              only: master
      - 
        publish-latest: 
          filters: 
            branches: 
              only: master
          requires: 
            - build
