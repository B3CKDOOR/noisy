version: 2
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: madereddy/noisy
    docker:
      - image: circleci/python3.9
jobs:
    Python_3.9:
    docker:
      - image: circleci/python:3.9
    working_directory: ~/repo

    steps: &steps
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            mkdir -p ./venv
            virtualenv ./venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run script
          # make sure the script runs, set a 60s timeout
          command: |
            . venv/bin/activate
            python --version
            pip --version
            python noisy.py --config config.json --timeout 60
      - store_artifacts:
          path: test-reports
          destination: test-reports
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$docker-password" | docker login -u "$docker-username" --password-stdin
            docker push $image:latest
workflows:
  version: 2
  build:
    jobs:
      - Python_3.9
      - publish-latest:
            docker-username: Login 
            docker-password: AccessToken 
            image: Noisy 
